name: Generate_Docker_Image

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
  repository_dispatch:
    types: [trigger-sub-build]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      update_needed: ${{ steps.version_check.outputs.update_needed }}
      latest: ${{ steps.version_check.outputs.latest }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          persist-credentials: true

      - name: Fetch Latest Release Info
        id: version_check
        run: |
          raw=$(curl -s https://api.github.com/repos/urnetwork/build/releases/latest \
            | jq -r '.tag_name')
          latest=${raw#v}
          echo "latest=$latest" >> $GITHUB_OUTPUT

          if [[ -f version.txt ]]; then
            stored=$(<version.txt)
          else
            stored=""
          fi
          echo "stored=$stored" >> $GITHUB_OUTPUT

          if [[ "$latest" != "$stored" ]]; then
            echo "update_needed=true" >> $GITHUB_OUTPUT
          else
            echo "update_needed=false" >> $GITHUB_OUTPUT
          fi

      - name: Update version.txt
        if: steps.version_check.outputs.update_needed == 'true'
        run: echo "${{ steps.version_check.outputs.latest }}" > version.txt

      - name: Update README.md version heading
        if: steps.version_check.outputs.update_needed == 'true'
        run: |
          sed -i \
            "s|^# Docker-UrNetwork Releases v.*|# Docker-UrNetwork Releases v${{ steps.version_check.outputs.latest }}|" \
            README.md

      - name: Commit version.txt back to main
        if: steps.version_check.outputs.update_needed == 'true'
        run: |
          git config user.email "${{ secrets.GIT_USER_EMAIL }}"
          git config user.name "${{ secrets.GIT_USER_NAME }}"
          git add version.txt README.md
          git commit -m "Update version.txt to ${{ steps.version_check.outputs.latest }} [skip ci]"
          git remote set-url origin https://techroy23:${{ secrets.GH_PAT }}@github.com/techroy23/Docker-UrNetwork.git
          git push origin main

      - name: Set up QEMU
        if: steps.version_check.outputs.update_needed == 'true'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set Up Docker Buildx
        if: steps.version_check.outputs.update_needed == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        if: steps.version_check.outputs.update_needed == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Log in to Docker Hub
        if: steps.version_check.outputs.update_needed == 'true'
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push image to GHCR & Docker Hub
        if: steps.version_check.outputs.update_needed == 'true'
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/docker-urnetwork:${{ steps.version_check.outputs.latest }}
            ghcr.io/${{ github.repository_owner }}/docker-urnetwork:latest
            docker.io/techroy23/docker-urnetwork:${{ steps.version_check.outputs.latest }}
            docker.io/techroy23/docker-urnetwork:latest